"""Change password to password_hash

Revision ID: ff530447c5f4
Revises: a751fd360b91
Create Date: 2024-06-23 12:44:18.200647

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import table, column
from sqlalchemy import String

# revision identifiers, used by Alembic.
revision = 'ff530447c5f4'
down_revision = 'a751fd360b91'
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Handle movie table separately
    with op.get_context().autocommit_block():
        op.execute("DROP TABLE IF EXISTS _alembic_tmp_movie")

    with op.batch_alter_table('movie', schema=None) as batch_op:
        batch_op.drop_column('rating')

    # Handle user table
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password_hash', sa.String(length=128), nullable=True))
        
    # Define a temporary table matching the existing structure
    user_table = table(
        'user',
        column('usr_id', sa.Integer),
        column('password_hash', sa.String(128))
    )

    # Set a default value for existing users
    op.execute(user_table.update().values({'password_hash': 'default_password_hash'}))

    # Make the column non-nullable
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('password_hash', existing_type=sa.String(length=128), nullable=False)
        batch_op.drop_column('password')

    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password', sa.VARCHAR(length=60), nullable=False))
        batch_op.drop_column('password_hash')

    with op.batch_alter_table('movie', schema=None) as batch_op:
        batch_op.add_column(sa.Column('rating', sa.FLOAT(), nullable=True))

    # ### end Alembic commands ###